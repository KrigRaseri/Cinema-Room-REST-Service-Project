package com.umbrella.cinemarestservice.model;

import com.fasterxml.jackson.annotation.JsonIgnore;
import jakarta.persistence.*;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

/**
 * Represents a seat in a cinema, including its row, column, price, and availability status.
 *
 * This class is used to model individual seats within a cinema, storing information
 * such as its row, column, price, availability, and a unique identifier (UUID).
 *
 * @author KrigRaseri (pen name)
 * @version 1.0
 */
@Entity
@Table(name = "SEATS")
@Getter
@NoArgsConstructor
public class Seat {

    /**
     * The unique identifier for the seat (auto-generated by the database).
     */
    @Id
    @Column(name = "seat_id")
    @JsonIgnore
    @Setter
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    long id;

    /**
     * The row number where the seat is located in the cinema.
     */
    @Column(name = "seat_row")
    private int row;

    /**
     * The column number where the seat is located in the cinema.
     */
    @Column(name = "seat_column")
    private int column;

    /**
     * The price of the seat for purchasing tickets.
     */
    @Column(name = "seat_price")
    private int price;

    /**
     * The unique identifier (UUID) associated with the seat.
     */
    @Setter
    @JsonIgnore
    @Column(name = "seat_uuid")
    private String UUID;

    /**
     * Indicates whether the seat is available for booking.
     */
    @Setter
    @JsonIgnore
    @Column(name = "seat_available")
    private boolean seatAvailable = true;

    public Seat(int row, int column, int price) {
        this.row = row;
        this.column = column;
        this.price = price;
    }
}
